
/*
 * Copyright (c) 2015 Luca Burgazzoli
 *
 * https://github.com/lburgazzoli
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// *****************************************************************************
// -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager
// *****************************************************************************

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        //maven { url 'http://repo.spring.io/libs-release' }
        //maven { url 'http://repo.spring.io/libs-milestone' }
        //maven { url 'http://repo.spring.io/libs-snapshot' }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.9'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE'
    }
}

// *****************************************************************************
//
// *****************************************************************************

subprojects {
    
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'osgi'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'com.bmuschko.nexus'


    version             = '1.0.0.SNAPSHOT'
    group               = 'com.github.lburgazzoli'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    
    project.ext {
        gradleVersion       = "2.4"
        gradleScriptDir     = "${rootProject.projectDir}/gradle"
        isReleaseVersion    = !version.endsWith("SNAPSHOT")
        gitRoot             = "https://github.com/lburgazzoli"
        gitProject          = "https://github.com/lburgazzoli/${project.name}"
        deploySnapshot      = "https://oss.sonatype.org/content/repositories/snapshots"
        gradleScriptDir     = "${rootProject.projectDir}/gradle"
        osgiVersion         = project.version.replaceAll('-','.')

        if(!project.hasProperty('nexusUsername') && !project.hasProperty('nexusPassword')) {
            nexusUsername = "$System.env.CI_DEPLOY_USERNAME"
            nexusPassword = "$System.env.CI_DEPLOY_PASSWORD"
        }

        versions = [
            slf4j              : '1.7.12',
            log4j2             : '2.3',
            jackson            : '2.5.2',
            jacksonCore        : '2.5.2',
            jacksonDatabind    : '2.5.2',
            jacksonSmile       : '2.5.2',
            guava              : '18.0',
            commonsLang        : '3.4',
            commonsCollections : '4.0',
            spring             : '4.1.6.RELEASE',
            springSecurity     : '4.0.1.RELEASE',
            springBoot         : '1.2.3.RELEASE',
            springCloud        : '1.0.2.BUILD-SNAPSHOT',
            gsCollections      : '6.1.0',
            jolokia            : '1.2.3',
            javaxInject        : '1',
            javaxEl            : '3.0.0',
            hibernateValidator : '5.1.3.Final',
            junit              : '4.12',
            lbEtcd             : '2.0.11-SNAPSHOT'
        ]
    }
    
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven { url 'http://repo.spring.io/libs-milestone' }
        maven { url 'http://repo.spring.io/libs-snapshot' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    dependencies {
        compile("org.slf4j:slf4j-api:$versions.slf4j") { transitive = false }
        compile("org.slf4j:slf4j-ext:$versions.slf4j") { transitive = false }

        runtime "org.apache.logging.log4j:log4j-api:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-core:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-jcl:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-jul:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-slf4j-impl:$versions.log4j2"

        compile "com.google.guava:guava:$versions.guava"
        compile "com.goldmansachs:gs-collections:$versions.gsCollections"

        compile "org.apache.commons:commons-lang3:$versions.commonsLang"
        compile "org.apache.commons:commons-collections4:$versions.commonsCollections"
        
        compile("org.springframework:spring-core:$versions.spring") {
            exclude group:'commons-logging', module:'commons-logging'
        }
        compile("org.springframework:spring-context:$versions.spring") {
            exclude group:'commons-logging', module:'commons-logging'
        }
        compile("org.springframework:spring-web:$versions.spring") {
            exclude group:'commons-logging', module:'commons-logging'
        }
        compile("org.springframework.security:spring-security-core:$versions.springSecurity") {
            exclude group:'commons-logging', module:'commons-logging'
        }

        compile "com.fasterxml.jackson.core:jackson-core:$versions.jacksonCore"
        compile "com.fasterxml.jackson.core:jackson-databind:$versions.jacksonDatabind"
        compile "com.fasterxml.jackson.core:jackson-annotations:$versions.jackson"
        compile "com.fasterxml.jackson.module:jackson-module-afterburner:$versions.jackson"
        compile "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:$versions.jacksonSmile"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$versions.jackson"

        compile "javax.inject:javax.inject:$versions.javaxInject"
        compile "javax.el:javax.el-api:$versions.javaxEl"
        compile "org.hibernate:hibernate-validator:$versions.hibernateValidator"

        testCompile "junit:junit:$versions.junit"
    }

    jar {
        baseName = "${project.name}"

        manifest.attributes['Bundle-Description'    ] = "lb :: ${project.name}"
        manifest.attributes['Bundle-Name'           ] = "lb :: ${project.name}"
        manifest.attributes['Bundle-SymbolicName'   ] = "${project.group}-${project.name}"
        manifest.attributes['Bundle-Version'        ] = osgiVersion
        manifest.attributes['Implementation-Title'  ] = "${project.group}-${project.name}-${project.version}"
        manifest.attributes['Implementation-Version'] = osgiVersion
        manifest.attributes['Implementation-Vendor' ] = 'lb'
    }

    test {
        testLogging {
            events          'failed'
            exceptionFormat 'full'
        }
    }

    [compileJava, compileTestJava]*.options*.compilerArgs = [
        "-Xlint:unchecked",
        "-Xlint:deprecation",
    ]

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    dependencyUpdates {
        revision = 'release'
    }

    // *************************************************************************
    //
    // *************************************************************************

    nexus {
        sign    = isReleaseVersion
    }

    extraArchive {
        javadoc = true
        sources = true
        tests   = false
    }

    modifyPom {
        project {
            name          = "${project.name}"
            description   = "${project.name}"
            url           = "${project.gitProject}"
            packaging     = 'jar'

            licenses {
                license {
                    name         = "The Apache Software License, Version 2.0"
                    url          = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution = "repo"
                }
            }

            scm {
                url                 = "${project.gitProject}"
                connection          = "scm:git:${project.gitProject}.git"
                developerConnection = "scm:git:${project.gitProject}.git"
            }

            developers {
                developer {
                    id 'lburgazzoli'
                    name 'Luca Burgazzoli'
                }
            }
        }
    }
}

// *****************************************************************************
//
// *****************************************************************************

task wrapper(type: Wrapper) {
    gradleVersion = gradleVersion
}
